<h2>Kmom 04</h2>

<p>Skrivandet av tester för ens kod är till viss del utmanande på ett annorlunda sätt jämfört med att skriva "vanlig" kod. En av de mer utmanande aspekterna är att testerna i sig inte testas så man behöver försäkra sig extra noga om att testerna sig fungerar som tänkt. Utöver det behöver man även identifiera hur man ska testa ens funktioner samt klasser på ett sätt som är logiskt, för att det ska resultera i ett meningsfullt test. Självaste syntaxen för skrivandet av testerna är lik testerna som man har skrivit tidigare i Python-kurserna.</p>

<p>Jag lyckades uppnå 93% kodteckning av koden för kortspelet, de allra flesta delarna gick relativt snabbt att skriva tester för då jag har lyckats få mina klasser samt funktioner att vara väl testbara. De förlitar sig inte allt för mycket på andra externa delar och det är möjligt att köra dem i en mer isolerad miljö. En ändring som jag har gjort på flera ställen i min kod för att göra den mer testbar är att sätta default-värden för många av parametrarna för funktionerna, mestadels för att förenkla skrivandet av testerna då man endast behöver anropa funktionen som ska testas utan att behöva tänka på att mocka vissa värden. Utöver default-värden är det inga större ändringar som har gjorts i min kod för att göra den mer testbar. Dock när jag har gått igenom all min kod har jag lyckats hitta ett och ett annat fel i koden, inget som har påverkat funktionaliteten i sig utan att jag sett att det finns ett bättre sätt att skriva delar av funktionen på. Det visar på att det kan vara en god ide att gå igenom sin kod en extra gång eller två och inte endast nöja sig med att det funkar för att aldrig mer återkomma till den.</p>

<p>När jag ska arbeta vidare med min kod i framtiden kommer jag att försöka göra den så testbar som möjligt, då det dels kommer göra det enklare att skriva tester och dels för att man nog får "snyggare" kod på köpet. Det krävs att man tänker till lite extra <em>hur</em> man skriver sin kod, och att man inte endast försöker komma på den snabbaste möjliga lösningen på ett problem. Sen är frågan om man kan fokusera för mycket på testbarheten, att det möjligtvis kan bli ett hinder för vissa kodlösningar, men jag har inte stött på det än men jag kan tänka mig att det inte är en omöjlighet.</p>