<h2>Kmom 01</h2>

<p>Min fösta introduktion till objektorientering var i JS-kursen som vi läste i vintras, vi arbetade till viss del med klasser och objekt i de sista kursmomenten. Då jag dock var helt ny på objektorientering som koncept så kan jag nu i efterhand säga att koden jag skrev då levde nog inte riktigt upp till standarden, och skulle jag göra om det idag så hade min kodstruktur sett helt annorlunda ut. Kursen oopython såg däremot till att jag fick en god grund för att arbeta objektorienterat och att jag har idag en god förståelse för grundprinciperna samt kan arbeta väl med objektorientering, men det finns såklart mycket mer att lära sig. </p>

<p>Det som jag tror att man först behöver för att komma igång med att skapa klasser i PHP är en god grund i hur objektorienterad programmering fungerar generellt, oavsett vilket språk det är. Det som jag har läst i guiderna och sett på föreläsningarna känner jag igen från python-kursen även om syntaxen ser annorlunda ut. Den stora skillnaden som jag kan se nu vid start är att PHP har en "hårdare" inkapsling av metoder och attribut. Det går inte att komma åt privata delar av en klass utanför den, vilket dock är möjligt i python även om man som programmerare inte ska göra det. Enkelt sagt är privata attribut mer av en namnstandard i Python medan i PHP är det en faktiskt inkapsling av sin kod.</p>

<p>Symfony som ramverk påminner till stor del om de content-management-system som vi har arbetat med i tidigare kurser. Det tar alltid en liten stund att sätta sig in i exakt hur alla aspekter hör ihop, men allt eftersom tiden går så börjar man känna igen sig i hur det fungerar. Jag stötte på lite problem när jag först började arbeta med installationen, Composer tyckte att en dependency saknades även fast att den var installerad på min maskin. Efter lite eget sökande samt snabb respons av Mikael i Discord kunde jag lösa problemet och fortsätta med mitt arbete.</p>

<p>Det finns dock ett ytterligare problem som jag har kvar att lösa i min report sida som uppstår för att jag har valt att arbeta med SASS som css-preprocessor för att göra arbetet i CSS enklare, filerna fungerar lokalt men vill inte fungera på studenservern. Jag tror det har att göra med att SASS kompilerar filerna automatiskt och löpande till mappen "assets" som sidan möjligtvis inte har tillgång till när den laddas in på servern. I skrivande stund kör jag på en "fullösning" för att få det till att fungera, jag kompilerar själv en CSS-fil i terminalen som sparas i public-mappen och ändrar vilken stylesheet som ska läsas in i Twig-filen när den ska laddas upp. Det är inte den bästa lösningen men det får fungera tills jag har satt in mig mer ramverket Symfony. Utöver mina två problem så tycker jag att Symfony känns initialt som ett bra ramverk som gör det smidigt att få igång en webbplats och enkelt att få en god kodstruktur på ens filer.</p>

<p>När man är inne på olika forum som berör programmering så stöter jag ofta på många som ser väldigt negativt på PHP som programmeringsspråk, något som jag inte riktigt har kunnat lista ut varför. Det som är synd är att det har även till viss del präglat min uppfattning av språket, även om jag kan alldeles för lite om programmering för att kunna ha åsikter om vad som är ett bra respektive dåligt programmeringsspråk. Artikeln "PHP The Right Way" visar för mig att det är precis som de andra språken som vi har arbetat med, och det får mig att tro att det kanske har funnits problem tidigare i PHPs historia som kan ha skapat ett negativt intryck hos personer. Det enda som gör mig lite osäker inför att arbeta med det är att jag har tillskillnad från JavaScript och Python inga tidigare erfarenheter av det, de två andra språket har jag studerat på egen hand innan jag började programmet för webbprogrammering på BTH. Jag behöver helt enkelt bli "varm i kläderna" med att arbeta med det, och vem vet, det kanske blir det programmeringsspråk som jag kommer föredra att arbeta med. Ser man till de olika arbetsannonserna som finns i närheten av mig så verkar programmerare inom PHP vara eftertraktat.</p>

<p>Avslutningsvis så får min TIL för detta moment vara att man kan relativt enkelt föra över sina kunskaper till en ny utvecklingsmiljö nu när man har samlat på sig erfarenheter av att utveckla i olika miljöer i tidigare kurser. Det gör man kan snabbt kunna bygga upp en webbplats, även om man inte har full koll på vare sig ramverket eller programmeringsspråket.</p>

<p></p>

<p></p>
